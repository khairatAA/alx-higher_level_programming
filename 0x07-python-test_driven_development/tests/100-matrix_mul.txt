The ``100-matrix_mul`` module
======================

Using ``matrix_mul``
------------------------

This is a 100-matrix_mul text file in reStructuredText format.  First import
``matrix_mul`` from the ``100-matrix_mul`` module:

        >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

``matrix_mul(m_a, m_b)`` multiplies 2 matrices:

Now use it:
	>>> m_a = (23, 'name', True)
	>>> m_b = [1, 2, 3]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
		...
	TypeError: m_a must be a list

	>>> m_a = [1, 2, 3]
	>>> m_b = (23, 'name', True)
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
		...
	TypeError: m_b must be a list

	>>> matrix_mul([1, 4, 8], [[1]])
	Traceback (most recent call last):
		...
	TypeError: m_a must be a list of lists

	>>> matrix_mul([[1]], [6, 7, 9])
	Traceback (most recent call last):
		...
	TypeError: m_b must be a list of lists

	>>> matrix_mul([[]], [[6, 7, 9]])
	Traceback (most recent call last):
		...
	ValueError: m_a can't be empty

	>>> matrix_mul([[6, 7, 9]], [])
	Traceback (most recent call last):
		...
	ValueError: m_b can't be empty

	>>> matrix_mul([], [])
	Traceback (most recent call last):
		...
	ValueError: m_a can't be empty

	>>> matrix_mul([[8], []], [])
	Traceback (most recent call last):
		...
	ValueError: m_a can't be empty

	>>> matrix_mul([["khairat"]], [[1, 2, 4]])
	Traceback (most recent call last):
		...
	TypeError: m_a should contain only integers or floats

	>>> matrix_mul([[(1, 3, 55)]], [[0.8, 67, 0.000005665]])
	Traceback (most recent call last):
		...
	TypeError: m_a should contain only integers or floats

	>>> matrix_mul([[99, 78]], [[True]])

	Traceback (most recent call last):
		...
	TypeError: m_b should contain only integers or floats
