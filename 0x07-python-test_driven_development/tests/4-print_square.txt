The ``4-print_square`` module
======================

Using ``print_square``
------------------------

This is a 4-print_square text file in reStructuredText format.  First import
``print_square`` from the ``4-print_square`` module:

        >>> print_square = __import__('4-print_square').print_square

``print_square(size)`` prints a square with the character #.

Now use it:

	>>> print_square("5")
	Traceback (most recent call last):
		...
	TypeError: size must be an integer

	>>> print_square(None)
	Traceback (most recent call last):
		...
	TypeError: size must be an integer

	>>> print_square(-67.98)
	Traceback (most recent call last):
		...
	TypeError: size must be an integer

	>>> print_square(-67)
	Traceback (most recent call last):
		...
	ValueError: size must be >= 0

	>>> print_square(-6.909)
	Traceback (most recent call last):
		...
	TypeError: size must be an integer

	>>> print_square(2)
	##
	##

	>>> print_square(0)

	>>> print_square(-0.001)
	Traceback (most recent call last):
		...
	TypeError: size must be an integer

	>>> print_square(True)
	Traceback (most recent call last):
		...
	TypeError: size must be an integer

	>>> print_square(7)
	#######
	#######
	#######
	#######
	#######
	#######
	#######

	>>> print_square(1)
	#
