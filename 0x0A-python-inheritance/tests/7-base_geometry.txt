The ``7-base_geometry`` module
======================

Using ``base_geometry``
-------------------

This is 7-base_geometry  text file in reStructuredText format.  First import
``Base_geometry`` from the ``7-base_geometry`` module:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use it:
	>>> bg = BaseGeometry()

Invalid test:

	>>> bg.integer_validator((1, 7), 12)
	Traceback (most recent call last):
		...
	TypeError: name must be a string

	>>> bg.integer_validator("", 12)
	Traceback (most recent call last):
		...
	TypeError: name must not be an empty string

	>>> bg.integer_validator(None, 12)
	Traceback (most recent call last):
		...
	TypeError: name must be a string

	>>> bg.integer_validator(True, 12)
	Traceback (most recent call last):
		...
	TypeError: name must be a string

	>>> bg.integer_validator("name", "John")
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

	>>> bg.integer_validator("name", None)
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

	>>> bg.integer_validator("name", True)
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

	>>> bg.integer_validator("name", -100)
	Traceback (most recent call last):
		...
	ValueError: name must be greater than 0

	>>> bg.integer_validator("name", 0)
	Traceback (most recent call last):
		...
	ValueError: name must be greater than 0

Valid test:
	>>> bg.integer_validator("my_int", 12)
